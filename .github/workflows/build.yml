# build PythonEmbedInR, and deploy to S3 RAN server if conditions merit.
# at this point experimental

name: build

on:
  push:
    # we build/test all pushed branches, but not tags.
    # we only push tags with releases, and we handle releases explicitly
    branches:
      - '**'
    tags-ignore:
      - '**'

  pull_request:

  release:
    types:
      - 'published'

jobs:

  # on each of our matrix platforms, download the newly uploaded package from RAN
  check-deploy:

    strategy:
      matrix:
        os: [ubuntu-18.04, macos-mojave, windows-2019]
        r: [4.0.5, 4.1.0] 

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@master
      - name: setup-r
        if: ${{matrix.os != 'macos-mojave'}} 
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.r }}

      - name: setup-r-mac-mojave
        if: ${{matrix.os == 'macos-mojave'}}
        run: |
          # on macos mojave we use a self-hosted runner we swap among the pre-installed R versions
          rm -rf /Library/Frameworks/R.framework/Versions/Current
          ln -s /Library/Frameworks/R.framework/Versions/4.0 /Library/Frameworks/R.framework/Versions/Current

      - name: check-install
        shell: bash
        run: |
          RAN=https://staging-ran.synapse.org
          VERSION_TO_CHECK=0.11
          PACKAGE=PythonEmbedInR
          echo "if (available.packages(repos='$RAN')['$PACKAGE','Version'] != '$VERSION_TO_CHECK') { quit(save = 'no', status = 1) }" > test.R
          echo "try(remove.packages('$PACKAGE'), silent=T)" >> test.R
          echo "install.packages('$PACKAGE', repos=c('$RAN', 'http://cran.fhcrc.org'))" >> test.R
          echo "library('$PACKAGE')" >> test.R
          R --vanilla < test.R


